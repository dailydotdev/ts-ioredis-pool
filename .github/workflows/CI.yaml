name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      yarn-cache-dir: ${{ steps.set-outputs.outputs.yarn_cache_dir }}
    steps:
      # Checkout source files
      - name: Checkout Source Files
        uses: actions/checkout@v2

      # Setup environment
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Set Outputs
        id: set-outputs
        run: |
          echo "::set-output name=yarn_cache_dir::$(yarn cache dir)"

      - name: Read Yarn/Node Cache
        uses: actions/cache@v2
        id: read-yarn-cache
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          path: |
            ${{ steps.set-outputs.outputs.yarn_cache_dir }}
            **/node_modules

      - name: Read Build Cache
        id: read-build-cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-${{ github.sha }}
          path: |
            **/dist

      - name: Install Dependencies
        if: steps.read-yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build
        if: steps.read-build-cache.outputs.cache-hit != 'true'
        run: yarn build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        redis-version: [4, 5, 6]
    env:
      REDIS_URL: redis://:@localhost:6379
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASS: ""
      REDIS_TLS: false
    steps:
      # Checkout source files
      - name: Checkout Source Files
        uses: actions/checkout@v2

      # Setup environment
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: ${{ matrix.redis-version }}

      # Read caches
      - name: Read Yarn/Node Cache
        uses: actions/cache@v2
        id: read-yarn-cache
        with:
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          path: |
            ${{ needs.build.outputs.yarn-cache-dir }}
            **/node_modules

      - name: Read Build Cache
        id: read-build-cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build-${{ github.sha }}
          path: |
            **/dist

      - name: Test
        run: |
          yarn link
          yarn test

  publish-packages:
    name: Publish Packages
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/release'
    steps:
      - name: Publish Packages
        uses: benc-uk/workflow-dispatch@v1
        with:
          ref: refs/heads/release
          workflow: Publish Package
          token: ${{ secrets.GH_BOT_TOKEN }}
